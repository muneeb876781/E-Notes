[{"D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\index.js":"1","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\App.js":"2","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Card.js":"3","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Card_data.js":"4","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\ToDo_list.js":"5","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\ToDoListsItems.js":"6","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Navbar.js":"7","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Main.js":"8","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Error404.js":"9"},{"size":329,"mtime":1659457060380,"results":"10","hashOfConfig":"11"},{"size":3009,"mtime":1659459183006,"results":"12","hashOfConfig":"11"},{"size":729,"mtime":1659275487079,"results":"13","hashOfConfig":"11"},{"size":7080,"mtime":1659161610871,"results":"14","hashOfConfig":"11"},{"size":4623,"mtime":1659625053318,"results":"15","hashOfConfig":"11"},{"size":613,"mtime":1659602373521,"results":"16","hashOfConfig":"11"},{"size":430,"mtime":1659623821349,"results":"17","hashOfConfig":"11"},{"size":483,"mtime":1659622846507,"results":"18","hashOfConfig":"11"},{"size":297,"mtime":1659622769587,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"m1en2m",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\index.js",["52","53"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ToDo from './ToDo_list';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Main } from './Main';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Main />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n",[],"D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\App.js",["54"],[],"import React, { useState } from 'react';\nimport Card from './Card';\nimport './index.css';\nimport Card_data from './Card_data';\nimport Navbar from './Navbar';\n\n\n\nfunction App() {\n  const [bg, setBg] = useState('#fff')\n  const [color, setColor] = useState('#000')\n  const [text, setText] = useState('ENABLE DARK MODE')\n  const [bordor, setBordor] = useState('2px solid black')\n  const [fullName, setfullName] = useState({\n    firstName : '',\n    lastName : '',\n    email : '',\n  })\n  // const [lastName, setlastName] = useState('')\n  // const [firstNameNew, setfirstNameNew] = useState('')\n  // const [lastNameNew, setlastNameNew] = useState('')\n\n\n  function bgColorChange() {\n    setBg('#000')\n    setColor('#fff')\n    setText('DOUBLE CLICK TO ENABLE WHITE MODE')\n    setBordor('2px solid white')\n  };\n\n  function bgBack() {\n    setBg('#fff')\n    setColor('#000')\n    setText('ENABLE DARK MODE')\n    setBordor('2px solid black')\n  };\n\n  function eventHandler(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    setfullName((previous) => {\n      return{\n        ...previous,\n        [name] : value,\n      };\n      // if (name === 'firstName') {\n      //   return{\n      //     firstName: value,\n      //     lastName: previous.lastName\n      //   };\n      // } else if(name === 'lastName') {\n      //   return{\n      //     firstName: previous.firstName,\n      //     lastName: value\n      //   };\n      // }\n    });\n  };\n\n  function onSubmit(event) {\n    event.preventDefault()\n    alert('form submitted')\n  }\n\n  return (\n    <>\n      <div style={{ backgroundColor: bg, color: color }} className=\"heading\">\n        <h1 style={{ backgroundColor: bg, color: color }} className=\"\">TOP RATED NETFLIX SERIES</h1>\n        <button style={{ backgroundColor: bg, color: color, border: bordor }} onClick={bgColorChange} onDoubleClick={bgBack}>{text}</button>\n      </div>\n\n      {Card_data.map(all_card)};\n\n      <br />\n      <form onSubmit={onSubmit}>\n        <div className=\"formcontainer\">\n          <h1>hello {fullName.firstName} {fullName.lastName}</h1>\n          <p>{fullName.email}</p>\n          <input type=\"text\"\n            onChange={eventHandler}\n            name = 'firstName'\n            value={fullName.firstName}\n            placeholder='enter your first name' />\n          <input type=\"text\"\n            onChange={eventHandler}\n            name = 'lastName'\n            value={fullName.lastName}\n            placeholder='enter your last name' />\n          <input type=\"email\"\n            onChange={eventHandler}\n            name = 'email'\n            value={fullName.email}\n            autoComplete = 'off'\n            placeholder='enter your email' />\n          <button>submit</button>\n        </div>\n      </form>\n    </>\n  );\n  function all_card(val) {\n    return (\n      <Card\n        key={val.id}\n        img_src={val.img_src}\n        org_name={val.org_name}\n        ser_name={val.ser_name}\n        button={val.button}\n      />\n    );\n  };\n}\n\nexport default App;\n","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Card.js",["55","56"],[],"import React, { useState } from 'react';\r\nimport './index.css';\r\n\r\nfunction Card(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cards\">\r\n                <div className=\"card\">\r\n                    <img className=\"imgsrc\" src={props.img_src} alt='my img' />\r\n                    <div className=\"info\">\r\n                        <p className='org_info'>{props.org_name}</p>\r\n                        <h3 className='ser_name'>{props.ser_name}</h3>\r\n                        <a href={props.button} target='_blank'>\r\n                            <button>WATCH</button>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Card;","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Card_data.js",[],[],"D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\ToDo_list.js",["57","58","59"],[],"D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\ToDoListsItems.js",[],[],"D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Navbar.js",[],[],"D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Main.js",["60"],[],"import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport ToDo_list from './ToDo_list'\r\nimport App from './App';\r\nimport {Route, Routes} from 'react-router-dom';\r\nimport { Error404 } from './Error404';\r\n\r\nexport const Main = () => {\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <Routes>\r\n        <Route exact path = '/' element = {<ToDo_list/>}/>\r\n        <Route exact path = '/about' element = {<App/>}/>\r\n        <Route element = {<Error404/>}/>\r\n    </Routes>\r\n    </>\r\n  )\r\n}\r\n","D:\\m a\\web course\\react tutorial\\practice\\practice\\src\\Error404.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":11},{"ruleId":"61","severity":1,"message":"65","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":12},{"ruleId":"61","severity":1,"message":"66","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":14},{"ruleId":"61","severity":1,"message":"67","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":14,"column":25,"nodeType":"70","messageId":"71","endLine":14,"endColumn":64,"fix":"72"},{"ruleId":"61","severity":1,"message":"66","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":14},{"ruleId":"61","severity":1,"message":"73","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":11},{"ruleId":"74","severity":1,"message":"75","line":13,"column":44,"nodeType":"70","messageId":"76","endLine":13,"endColumn":56},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'ToDo' is defined but never used.","'Navbar' is defined but never used.","'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"77","text":"78"},"'ToDoLiatsItems' is defined but never used.","react/jsx-pascal-case","Imported JSX component ToDo_list must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase",[525,525]," rel=\"noreferrer\""]